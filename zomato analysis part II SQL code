-- 6 Which item was purchased first by the customer after they became a member?
select * from
(select c.*, rank() over(partition by userid order by created_date) rnk from
(select a.userid, a.created_date, a.product_id, b.gold_signup_date
from sales a
inner join goldusers_signup b
on a.userid = b.userid and created_date > gold_signup_date) c) d
where rnk = 1;

Output
"userid"	"created_date"	"product_id"	"gold_signup_date"	"rnk"
1	"2018-03-19"	3	"2017-09-22"	1
3	"2017-12-07"	2	"2017-04-21"	1

--7 Which item was purchased just before the customer became a member?
select * from
(select c.*, rank() over(partition by userid order by created_date desc) rnk from
(select a.userid, a.created_date, a.product_id, b.gold_signup_date
from sales a
inner join goldusers_signup b
on a.userid = b.userid and created_date <= gold_signup_date) c) d
where rnk = 1;

Output
"userid"	"created_date"	"product_id"	"gold_signup_date"	"rnk"
1	"2017-04-19"	2	"2017-09-22"	1
3	"2016-12-20"	2	"2017-04-21"	1


--8 What is the total orders and amount spent for each member before they became a member?
select userid, count(created_date) no_of_order_purchased, sum(price) total_amount_spent from
(select c.*, d.price from (select a.userid, a.created_date, a.product_id, b.gold_signup_date
from sales a
inner join goldusers_signup b
on a.userid = b.userid and created_date <= gold_signup_date) c
inner join product d
on c.product_id = d.product_id) e
group by userid
order by userid;

Output
"userid"	"no_of_order_purchased"	"total_amount_spent"
1	5	4030
3	3	2720

-- 9 If buying each product generates points for eg 5rs = 2 zomato point and each product has different purchasing points
-- for eg for p1 5rs = 1 zomato point, for p2 10rs = 5 zomato point and p3 5rs = 1 zomato point.

select userid, sum(total_points)*2.5 total_money_earned from
(select e.*, amount_spent/points total_points from
(select d.*, case when product_id = 1 then 5 when product_id = 2 then 2 when product_id = 3 then 5 end as points from
(select userid, product_id, sum(price) amount_spent from
(select a.userid, a.product_id, b.price
from sales a
inner join product b
on a.product_id = b.product_id) c
group by userid, product_id) d) e) f
group by userid;

Output
"userid"	"total_money_earned"
3	4242.5
2	1907.5
1	4572.5

--10 Calculate points collected by each customers and for which product most points have given till now.
select * from
(select g.*, rank() over(order by total_points_earned desc)rnk from
(select product_id, sum(points_earned) total_points_earned from
(select e.*, total_amount/points as points_earned from
(select d.*, case when product_id = 1 then 5 when product_id = 2 then 2 when product_id = 3 then 5 end as points from
(select userid, product_id,sum(price) total_amount from
(select a.userid, a.product_id, b.price
from sales a
inner join product b
using(product_id)) c
group by userid, product_id) d) e) f
group by product_id) g) h
where rnk = 1;

Output
"product_id"	"total_points_earned"	"rnk"
2	3045	1

/* 11 In the first one year after a customer joins the gold program (including their join date) irrespective
of what the customer has purchased they earn 5 zomato points for every 10 rs spent who earned more 1 or 3
and what was their points earnings in their first year?
*/

select c.*, d.price*0.5 total_points_earned from
(select a.*, b.gold_signup_date
from sales a
inner join goldusers_signup b
on a.userid = b.userid and created_date >= gold_signup_date and created_date <= DATE (gold_signup_date) + interval '1 year')c
inner join
product d on c.product_id = d.product_id
order by userid

Output
"userid"	"created_date"	"product_id"	"gold_signup_date"	"total_points_earned"
1	"2018-03-19"	3	"2017-09-22"	165.0
3	"2017-12-07"	2	"2017-04-21"	435.0

-- 12 Rank all the transactions of the customers
select *, rank() over(partition by userid order by created_date) from sales;

Output
"userid"	"created_date"	"product_id"	"rank"
1	"2016-03-11"	1	1
1	"2016-05-20"	3	2
1	"2016-11-09"	1	3
1	"2017-03-11"	2	4
1	"2017-04-19"	2	5
1	"2018-03-19"	3	6
1	"2019-10-23"	2	7
